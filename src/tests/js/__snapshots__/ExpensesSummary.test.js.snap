// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should properly render when one expense is there 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    expenseCount={1}
    expensesTotal={200}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <h1>
        1
         
        expense
         totalling : 
</h1>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          1,
          " ",
          "expense",
          " totalling : ",
          undefined,
        ],
      },
      "ref": null,
      "rendered": Array [
        1,
        " ",
        "expense",
        " totalling : ",
        undefined,
      ],
      "type": "h1",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <h1>
          1
           
          expense
           totalling : 
</h1>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            1,
            " ",
            "expense",
            " totalling : ",
            undefined,
          ],
        },
        "ref": null,
        "rendered": Array [
          1,
          " ",
          "expense",
          " totalling : ",
          undefined,
        ],
        "type": "h1",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`should properly render when one expense is there 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    expenseCount={100}
    expensesTotal={80190918200}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <h1>
        100
         
        expenses
         totalling : 
</h1>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          100,
          " ",
          "expenses",
          " totalling : ",
          undefined,
        ],
      },
      "ref": null,
      "rendered": Array [
        100,
        " ",
        "expenses",
        " totalling : ",
        undefined,
      ],
      "type": "h1",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <h1>
          100
           
          expenses
           totalling : 
</h1>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            100,
            " ",
            "expenses",
            " totalling : ",
            undefined,
          ],
        },
        "ref": null,
        "rendered": Array [
          100,
          " ",
          "expenses",
          " totalling : ",
          undefined,
        ],
        "type": "h1",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
